managed implementation in class zcl_cds_travel_pan1 unique;
strict ( 2 );
//zbp_cds_travel_pan
with draft;
//strict ( 1 );

define behavior for YCDS_TRAVEL_PAN //alias <alias_name>
persistent table zfe_atrav_001001
draft table zfe_dtrav_001pan
lock master total etag LastChangedAt
authorization master ( instance )
etag master LocalLastChangedAt
{

  field ( readonly )
  TravelUuid,
  TravelId;

  action ( features : instance ) TotalPrice result [1] $self;

  field ( numbering : managed )
  TravelUuid;

  create;
  update;
  delete;

  draft action Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;
  mapping for zfe_atrav_001001
    {
      TravelId           = travel_id;
      TravelUuid         = travel_uuid;
      AgencyId           = agency_id;
      CustomerId         = customer_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      OverallStatus      = overall_status;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }


  association _Booking { create; with draft; }
  validation ValCurrencyCode on save { update; create; }
  determination CalculateTravelID on save { create; }
  determination GetCurrCode on save { field CurrencyCode; }
}

define behavior for YCDS_BOOKING_PANKAJ //alias <alias_name>
persistent table zfe_abook_001001
draft table zfe_dbook_001001
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{

  field ( readonly )
  TravelUuid;
  //BookingID;

  field ( numbering : managed )
  BookingUuid;

  update;
  delete;
  //  field ( readonly ) TravelUuid;
  mapping for zfe_abook_001001
    {
      BookingUuid        = booking_uuid;
      TravelUuid         = travel_uuid;
      BookingId          = booking_id;
      BookingDate        = booking_date;
      CustomerId         = customer_id;
      CarrierId          = carrier_id;
      ConnectionId       = connection_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      CurrencyCode       = currency_code;
      CreatedBy          = created_by;
      LastChangedBy      = last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
    }


  determination CalculateBookingId on save { create; }
  association _Travel { with draft; }
}